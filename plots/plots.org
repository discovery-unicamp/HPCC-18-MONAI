#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+options: author:t broken-links:nil c:nil creator:nil
#+options: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:nil
#+options: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+options: timestamp:t title:t toc:t todo:t |:t
#+date: 2019-09-27 sex
#+title: Graphics
#+author: Rafael Keller Tesser
#+email: rktesser@unicamp.br
#+language: en
#+tags: noexport(n) deprecated(d) ignore(i) RafaelTesser(R) EdsonBorin(E) OtatioNapoli(O) Daniel(D)
#+select_tags: export
#+exclude_tags: noexport
#+startup: overview indent
#+property: header-args:R :output-dir "./img" :session 202208-dl-cloud
#+property: datadir "../logs"

* Loading packages

#+name: load-r-packages
#+begin_src R :results output :exports both :noweb no-export
suppressMessages(library(data.table))
suppressMessages(library(tidyverse))
options(crayon.enabled = FALSE)
options(dplyr.sumarise.inform = FALSE)
options(tidyverse.quiet = TRUE)
options(dplyr.summarise.inform = FALSE)
#+end_src

#+RESULTS: load-r-packages

* Pre-processing the data from the training logs

** Iteration times

The following code extracts the iteration times.

#+begin_src shell :results output :exports both
outfile="itertimes.csv"
echo exp run start.date start.time iter.date iter.time epoch epoch.total iter iter.total > "$outfile"
for d in ../logs/*/;do
	 exp="$(basename $d)"
	 nexp=1
	 for f in ${d}/*.log; do
	     #echo "$exp","$nexp"
	     #echo "$f"
	     start="$(grep "Engine run resuming" "$f" | cut -d " " -f -2)"
	     # All experiments finihed in the same day they started.
	     # So, we can ignore their dates when computing the timings
	
	     egrep "Epoch.*Iter:" "$f" | sed -e "s/\(.*\) - ignite.engine.engine.DynUNetTrainer - INFO - Epoch: \([^\/]*\)\/\([^,]*\), Iter: \([^\/]*\)\/\([^ ]*\) .*/${exp} ${nexp} ${start} \1 \2 \3 \4 \5/g" -e "s/,/\./g"
	     nexp=$((nexp + 1))
	 done
done >> "$outfile"

## cat "$outfile"
head "$outfile"
#+end_src

#+RESULTS:
#+begin_example
exp run start.date start.time iter.date iter.time epoch epoch.total iter iter.total
IAAS-p2.xlarge 1 2022-07-19 14:20:40.703 2022-07-19 14:20:48.325 1 10 1 16
IAAS-p2.xlarge 1 2022-07-19 14:20:40.703 2022-07-19 14:20:54.136 1 10 2 16
IAAS-p2.xlarge 1 2022-07-19 14:20:40.703 2022-07-19 14:20:59.778 1 10 3 16
IAAS-p2.xlarge 1 2022-07-19 14:20:40.703 2022-07-19 14:21:05.636 1 10 4 16
IAAS-p2.xlarge 1 2022-07-19 14:20:40.703 2022-07-19 14:21:11.394 1 10 5 16
IAAS-p2.xlarge 1 2022-07-19 14:20:40.703 2022-07-19 14:21:17.306 1 10 6 16
IAAS-p2.xlarge 1 2022-07-19 14:20:40.703 2022-07-19 14:21:22.961 1 10 7 16
IAAS-p2.xlarge 1 2022-07-19 14:20:40.703 2022-07-19 14:21:28.851 1 10 8 16
IAAS-p2.xlarge 1 2022-07-19 14:20:40.703 2022-07-19 14:21:34.588 1 10 9 16
#+end_example

** Epoch times

#+begin_src shell :results output :exports both
outfile="epochtimes.csv"
echo exp run epoch epoch.duration > "$outfile"
for d in ../logs/*/;do
	 exp="$(basename $d)"
	 nexp=1
	 for f in ${d}/*.log; do
	     #echo "$exp","$nexp"
	     #echo "$f"
	     
	     egrep "Epoch.*Complete" "$f" | cut -d " " -f 8- | sed -e "s/Epoch\[\(.*\)\] Complete. Time taken: \(.*\)/${exp} ${nexp} \1 \2/g"
	     
	     ## egrep "Epoch.*Iter:" "$f" | sed -e "s/\(.*\) - ignite.engine.engine.DynUNetTrainer - INFO - Epoch: \([^\/]*\)\/\([^,]*\), Iter: \([^\/]*\)\/\([^ ]*\) .*/${exp} ${nexp} ${start} \1 \2 \3 \4 \5/g" -e "s/,/\./g"
	     nexp=$((nexp + 1))
	 done
done >> "$outfile"

cat "$outfile"
## head "$outfile"
#+end_src

#+RESULTS:
#+begin_example
exp run epoch epoch.duration
IAAS-p2.xlarge 1 1 00:01:34
IAAS-p2.xlarge 1 2 00:01:34
IAAS-p2.xlarge 1 3 00:01:34
IAAS-p2.xlarge 1 4 00:01:34
IAAS-p2.xlarge 1 5 00:01:34
IAAS-p2.xlarge 1 6 00:01:34
IAAS-p2.xlarge 1 7 00:01:34
IAAS-p2.xlarge 1 8 00:01:39
IAAS-p2.xlarge 1 9 00:01:37
IAAS-p2.xlarge 1 10 00:01:33
IAAS-p2.xlarge 2 1 00:00:41
IAAS-p2.xlarge 2 2 00:00:40
IAAS-p2.xlarge 2 3 00:00:41
IAAS-p2.xlarge 2 4 00:00:41
IAAS-p2.xlarge 2 5 00:00:41
IAAS-p2.xlarge 2 6 00:00:41
IAAS-p2.xlarge 2 7 00:00:41
IAAS-p2.xlarge 2 8 00:00:41
IAAS-p2.xlarge 2 9 00:00:41
IAAS-p2.xlarge 2 10 00:00:41
SAGEMAKER-g4dn-xlarge 1 1 00:00:32
SAGEMAKER-g4dn-xlarge 1 2 00:00:26
SAGEMAKER-g4dn-xlarge 1 3 00:00:26
SAGEMAKER-g4dn-xlarge 1 4 00:00:26
SAGEMAKER-g4dn-xlarge 1 5 00:00:26
SAGEMAKER-g4dn-xlarge 1 6 00:00:26
SAGEMAKER-g4dn-xlarge 1 7 00:00:26
SAGEMAKER-g4dn-xlarge 1 8 00:00:26
SAGEMAKER-g4dn-xlarge 1 9 00:00:26
SAGEMAKER-g4dn-xlarge 1 10 00:00:27
SAGEMAKER-g4dn-xlarge 2 1 00:00:30
SAGEMAKER-g4dn-xlarge 2 2 00:00:26
SAGEMAKER-g4dn-xlarge 2 3 00:00:26
SAGEMAKER-g4dn-xlarge 2 4 00:00:26
SAGEMAKER-g4dn-xlarge 2 5 00:00:26
SAGEMAKER-g4dn-xlarge 2 6 00:00:26
SAGEMAKER-g4dn-xlarge 2 7 00:00:27
SAGEMAKER-g4dn-xlarge 2 8 00:00:27
SAGEMAKER-g4dn-xlarge 2 9 00:00:27
SAGEMAKER-g4dn-xlarge 2 10 00:00:27
SAGEMAKER-g4dn-xlarge 3 1 00:00:31
SAGEMAKER-g4dn-xlarge 3 2 00:00:26
SAGEMAKER-g4dn-xlarge 3 3 00:00:27
SAGEMAKER-g4dn-xlarge 3 4 00:00:26
SAGEMAKER-g4dn-xlarge 3 5 00:00:26
SAGEMAKER-g4dn-xlarge 3 6 00:00:26
SAGEMAKER-g4dn-xlarge 3 7 00:00:26
SAGEMAKER-g4dn-xlarge 3 8 00:00:26
SAGEMAKER-g4dn-xlarge 3 9 00:00:26
SAGEMAKER-g4dn-xlarge 3 10 00:00:27
SAGEMAKER-p3-2xlarge 1 1 00:00:15
SAGEMAKER-p3-2xlarge 1 2 00:00:10
SAGEMAKER-p3-2xlarge 1 3 00:00:11
SAGEMAKER-p3-2xlarge 1 4 00:00:11
SAGEMAKER-p3-2xlarge 1 5 00:00:10
SAGEMAKER-p3-2xlarge 1 6 00:00:11
SAGEMAKER-p3-2xlarge 1 7 00:00:11
SAGEMAKER-p3-2xlarge 1 8 00:00:11
SAGEMAKER-p3-2xlarge 1 9 00:00:11
SAGEMAKER-p3-2xlarge 1 10 00:00:11
SAGEMAKER-p3-2xlarge 2 1 00:00:20
SAGEMAKER-p3-2xlarge 2 2 00:00:11
SAGEMAKER-p3-2xlarge 2 3 00:00:11
SAGEMAKER-p3-2xlarge 2 4 00:00:11
SAGEMAKER-p3-2xlarge 2 5 00:00:11
SAGEMAKER-p3-2xlarge 2 6 00:00:11
SAGEMAKER-p3-2xlarge 2 7 00:00:11
SAGEMAKER-p3-2xlarge 2 8 00:00:10
SAGEMAKER-p3-2xlarge 2 9 00:00:11
SAGEMAKER-p3-2xlarge 2 10 00:00:11
SAGEMAKER-p3-2xlarge 3 1 00:00:16
SAGEMAKER-p3-2xlarge 3 2 00:00:11
SAGEMAKER-p3-2xlarge 3 3 00:00:10
SAGEMAKER-p3-2xlarge 3 4 00:00:10
SAGEMAKER-p3-2xlarge 3 5 00:00:11
SAGEMAKER-p3-2xlarge 3 6 00:00:11
SAGEMAKER-p3-2xlarge 3 7 00:00:10
SAGEMAKER-p3-2xlarge 3 8 00:00:10
SAGEMAKER-p3-2xlarge 3 9 00:00:11
SAGEMAKER-p3-2xlarge 3 10 00:00:11
#+end_example


** Total training times

#+begin_src shell :results output :exports both
outfile="trainingtimes.csv"
echo exp run duration > "$outfile"
for d in ../logs/*/;do
	 exp="$(basename $d)"
	 nexp=1
	 for f in ${d}/*.log; do
	     #echo "$exp","$nexp"
	     #echo "$f"
	     
	     egrep "Engine run complete.*" "$f" | cut -d " " -f 13 | sed -e "s/\(.*\)/${exp} ${nexp}  \1/g"
	     
	     ## egrep "Epoch.*Iter:" "$f" | sed -e "s/\(.*\) - ignite.engine.engine.DynUNetTrainer - INFO - Epoch: \([^\/]*\)\/\([^,]*\), Iter: \([^\/]*\)\/\([^ ]*\) .*/${exp} ${nexp} ${start} \1 \2 \3 \4 \5/g" -e "s/,/\./g"
	     nexp=$((nexp + 1))
	 done
done >> "$outfile"
cat "$outfile"
#+end_src

#+RESULTS:
: exp run duration
: IAAS-p2.xlarge 1  00:15:46
: IAAS-p2.xlarge 2  00:06:47
: SAGEMAKER-g4dn-xlarge 1  00:04:25
: SAGEMAKER-g4dn-xlarge 2  00:04:29
: SAGEMAKER-g4dn-xlarge 3  00:04:27
: SAGEMAKER-p3-2xlarge 1  00:01:50
: SAGEMAKER-p3-2xlarge 2  00:01:55
: SAGEMAKER-p3-2xlarge 3  00:01:51

